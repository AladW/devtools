#!/bin/bash

# Source makepkg.conf; fail if it is not found
if [ -r "/etc/makepkg.conf" ]; then
	source "/etc/makepkg.conf"
else
    echo "/etc/makepkg.conf not found!"
    exit 1
fi

# Source user-specific makepkg.conf overrides
if [ -r ~/.makepkg.conf ]; then
	source ~/.makepkg.conf
fi

strip_url() {
	echo $1 | sed 's|^.*://.*/||g'
}

if [ ! -f PKGBUILD ]; then
	echo "This must be run in the directory of a built package."
	exit 1
fi

source PKGBUILD

pkgfile=${pkgname}-${pkgver}-${pkgrel}-${CARCH}${PKGEXT}
oldstylepkgfile=${pkgname}-${pkgver}-${pkgrel}${PKGEXT}

if [ -f "$(pwd)/$pkgfile" ]; then
    pkgfile=$(pwd)/$pkgfile
elif [ -f "$PKGDEST/$pkgfile" ]; then
    pkgfile=$PKGDEST/$pkgfile
elif [ -f "$(pwd)/$oldstylepkgfile" ]; then
    pkgfile=$(pwd)/$oldstylepkgfile
elif [ -f "$PKGDEST/$oldstylepkgfile" ]; then
    pkgfile=$PKGDEST/$oldstylepkgfile
else
    echo "File \"$pkgfile\" doesn't exist"
    exit 1
fi

tmp=`pacman -Spd --noconfirm $pkgname`

if [ $? -ne 0 ]; then
	echo "Couldn't download previous package."
	exit 1
fi

pkgurl=`echo $tmp | rev | cut -d ' ' -f 1 | rev`

oldpkg=`strip_url $pkgurl`

if [ "$(basename $oldpkg)" = "$(basename $pkgfile)" ]; then
	echo "The built package is the one in the repo right now!"
	exit 1
fi

if [ ! -f $oldpkg ]; then
	if echo $pkgurl | grep "^file:///" > /dev/null 2>&1; then
		cp `echo $pkgurl | sed 's#^file://##'` .
	else
		wget $pkgurl
	fi
fi

bsdtar tf $oldpkg > filelist-old
bsdtar tf "$pkgfile" > filelist

sort -o filelist filelist
sort -o filelist-old filelist-old

diff filelist-old filelist

if diff filelist-old filelist | grep '\.so\.' > /dev/null 2>&1; then
	mkdir -p pkg
	cd pkg
	bsdtar xf "$pkgfile" > /dev/null
	for i in `diff ../filelist-old ../filelist | grep \> | grep \.so\. | awk '{print $2}'`; do
		echo -n "${i}: "
		objdump -p $i | grep SONAME
	done
else
	echo "No filename differences"
fi

# vim:ft=sh:ts=4:sw=4:et:
